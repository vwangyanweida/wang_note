1、初始化一个Git仓库，使用 git init命令
2、添加文件到Git仓库，分两步：,提交修改也是这两步。
        一，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
        二，使用命令git commit，完成。
        eg：
            git add a.txt
            git commit -m "wrote a readme file"

3、git status 查看仓库当前的状态。  git diff 查看修改的记录。git log 查看从最近到最远的提交日志。
4、退回到上一个版本：git reset 命令。
    eg.
        git reset --hard HEAD^  // 在git中，用HEAD表示当前版本，上一个版本是HEAD^,上上一个版本就是^^，当然网上100个版本写100个^比较                                     容易数不过来，所以写成HEAD~100.
    eg.
        git reset --hard 3628164 //恢复commit id 以3628164开头的版本
使用reset命令后，再使用git log命令发现最新的那个版本已经看不到了，如果还想恢复最新的版本，只要知道那个版本的commit id就可以，如果找不到commit id，可以使用git reflog命令，这个命令用来记录你的每一次命令。
5、
（一）工作区：你在电脑里能看到的目录
（二）版本库：工作区有一个隐藏的目录.git 这个不算工作区，而是git的版本库。
（三）暂存区：git版本库中最重要的就是称为stage（或者叫index）的暂存区，还有git为我们自动创建的第一个分支master以及指向master的一个指针叫HEAD。
    git add命令实际上就是把要提交的所有修改防盗暂存区（Stage），然后git commit就可以一次性把暂存区的所有修改提交到分支。一旦提交后，如果没有对工作区做任何修改，那个工作区就是干净的。
（四）查看工作区和版本库里面最新版本的区别：git diff HEAD  -- readme.txt
（五）git checkout -- file丢弃工作区的修改，就是让这个文件回到最后一次 git commit 或是git add时的状态。
（六）git reset HEAD file可以把暂存区的修改撤销掉(unstage),重新放回工作区。
    eg.
        git reset HEAD readme.txt //
    git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当退回的是当前版本时表示把暂存区的修改回退到工作区。

git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:wangyanweigithub/wang_note.git
git push -u origin master

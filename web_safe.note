认证,强制,用户名/用户ID是否唯一？,,"系统必须保证用户名/用户ID唯一,也就是说禁止创建相同的用户名/用户ID。",,

,强制,用户口令复杂度是否满足要求？,,"设置或修改口令时默认要进行口令复杂度检查，默认口令复杂度至少满足如下要求：
? 口令长度至少8个字符（特权用户至少10个字符）；
? 口令长度最多128个字符；所有口令输入栏的允许输入长度与口令最大长度保持一致，确保用户输入的每个字符都属于口令内容，防止应用程序截断用户输入的口令内容。
? 口令必须包含如下至少三种字符的组合:
      －至少一个小写字母（a-z）；
            －至少一个大写字母（A-Z）；
                  －至少一个数字（0-9）；
                        －至少一个特殊字符：!""#$%&'()*+,-./:;<=>?@[\]^_`{|}~和空格
                        ? 口令不能和帐号或者帐号的倒写一样；
                        ? 口令不能包含超过2个连续的相同字符（如，111是不允许的）；
                        若口令不符合上述复杂度要求，必须进行警告，设置或修改口令不成功。警告消息内容应该描述口令没有满足哪些复杂度要求，而不仅仅是描述不满足。",,

                        ,强制,在口令输入框中口令是否不能明文显示和拷贝？,,在输入框中键入口令时口令不能明文显示，也不能被拷贝出来。,,

                        ,强制,用户修改口令时是否有验证旧口令和对新口令进行确认？,,进行口令修改时须验证旧口令和确认新口令,,

                        ,强制,特权用户的口令是否有要求每隔一定周期后进行修改、且周期可配置？,,对于系统管理员等特权用户，口令到达最长有效期后，用户再次登录成功但在进入系统前，系统强制更改口令，周期是可配置的，默认修改周期为90天,,

                        ,强制,首次登陆时是否要求用户修改默认口令？,,"系统提供的或者是由管理员设定的默认口令（初始口令），在用户首次成功登录后，要强制用户更改默认口令，直至更改成功。
                        说明：在用户成功更改默认口令前，不允许用户进行其他操作。",,

                        ,强制,在网络中传输口令是否有采用安全协议？,,在网络中传输口令时采用安全传输协议如HTTPS,,

                        ,强制,口令哈希或口令是否不存在以任何形式发送给用户？,,在Web应用的配置管理页面中，常需要配置或修改连接其他系统的帐号口令信息，如连接后台数据库的配置信息和口令、登录其他操作系统的帐号口令、连接第三方应用接口的帐号口令等。这些口令或口令哈希只能保存在服务端，不得发送到客户端,,

                        ,可选,口令存储前是否有使用带盐值的Hash算法来加密？,,口令在存储在如数据库前，应使用带盐值的Hash算法加密口令,,

                        ,可选,系统是否支持口令修改最短时间间隔以及口令历史记录、并且支持可配置？,,"连续两次口令修改的时间间隔不能低于口令的最短存活时间，同时系统应维护口令历史记录，新修改的口令不能与口令历史记录中的旧口令重复。
                        系统支持口令修改最短时间间隔可配置，默认时间间隔为1天。口令历史记录中保留的口令数或重用旧口令的频率可配置，默认重用间隔为10个",,

                        ,可选,Web应用中是否不存在“记住我”功能？,,应避免实现“记住我”功能。对于安全性要求不高的Web应用，可以根据实际需要决定是否使用该功能，若使用，在用户选择“记住我”功能时，对用户警告风险,,

                        ,可选,是否有关闭登录窗体表单中的自动填充功能？,,用户登录窗口没有自动填充数据的能力,,

                        ,可选,是否有提供安全的口令重置功能？,,"口令重置功能要求：
                        -安全问题通常要求是容易记住、问题的答案不会变化、通用和安全（如，你童年时梦想的职业是什么？）；
                        -安全问题的答案应当有最短长度要求（如10或12个字符）；
                        -对安全问题进行加密、对答案进行哈希存储
                        -采用如Email、短信等方式来接收口令重置的验证信息。
                        对于高价值的交易系统（如网上支付、网上银行等），不建议设置口令重置功能",,

                        ,强制,对用户的最终认证处理过程是否有在服务器端进行？,,除可能通过脚本或其他形式在客户端进行验证外，必须在应用服务器进行最终认证处理（如果采用集中认证，那么对用户的最终认证就是放在集中认证服务器进行）,,

                        ,强制,网页上的登录/认证表单是否有加入验证码？,,"网页上的登录/认证表单需加入验证码。如果觉得验证码影响用户体验，那么可以在前3次登录尝试中不使用验证码，3次登录失败后必须使用验证码。
                        验证码在设计上必须要考虑到一些安全因素，包括：
                        ? 验证码必须是单一图片、有背景干扰，背景干扰元素的颜色、位置随机变化；
                        ? 验证码字符串要求随机生成，随机字符串不能在客户端的静态页面中的网页源代码里出现；
                        ? 验证码在一次使用后要求立即失效，新的请求需要重新生成验证码；
                        ? 验证码内容不能与客户端提交的任何信息相关联。",,

                        ,强制,用户名、口令和验证码是否有在同一个请求中提交给服务器？,,用户名、口令和验证码须在同一请求中进行提交，且必须先判断验证码是否正确，只有当验证码检验通过后才进行用户名和口令的检验，否则直接提示验证码错误,,

                        ,强制,所有登录页面的认证处理模块是否统一？,,Web应用可能存在多个登录页面，但是处理登录认证请求的模块必须统一，确保认证机制一致，同时也有利于代码维护,,

                        ,强制,所有针对其他第三方开放接口的认证处理模块是否统一？,,第三方接口认证请求的处理模块必须统一，确保认证机制一致，同时也有利于代码维护,,

                        ,强制,认证失败后是否只是给出一般性的提示、并记录日志信息？,,认证错误不应给出明确的提示。可以提示：“登录失败；无效的用户名或口令，”；不能提示：“用户foo：口令无效”、“登录失败，无效用户ID”、“登录失败；帐号已停用”、“登录失败；用户未激活”等,,

                        ,强制,在系统中是否不存在预留任何未公开帐号或特殊的访问机制？,,系统中不得存在任何预留的未公开帐号或特殊的访问机制，如超级账号/口令、连接特定接口,,

                        ,强制,对于重要的管理事务或重要的交易事务是否有进行重新认证或二次认证？,,如管理员进行重置用户口令操作、用户进行转账操作等都要进行重认证或二次认证,,

                        ,可选,对安全性要求高的Web应用是否有实施多因素认证？,,对安全性要求高的Web应用（如网上支付、网上银行）实施多因素认证（如采用用户口令加硬件令牌、手机短信密码、USB KEY）,,

                        ,可选,同一客户端在多次连续尝试登录失败后，服务端是否有用户帐号或者是客户端所在机器的IP地址的锁定策略?,,多次连续尝试登录失败，需要对用户账号或客户端所在及其的PC进行锁定。锁定策略必须设置解锁时长，超时后自动解锁。,,

                        ,可选,认证通过后是否有给当前用户显示访问历史记录数据？,,"认证通过后，给当前用户显示有关的访问历史记录数据，包括：
                        1、上一次认证通过的日期、时间和位置等信息；
                        2、上一次认证失败的日期、时间和位置等信息；
                        3、自从最后一次认证通过以来失败的尝试次数；
                        4、口令将到期的天数（对于管理员和操作员）。",,

                        授权,强制,是否有使用Web框架内置的授权检查或者采用自己编写集中的授权模块、对于每一个需要授权访问的页面或servlet的请求都核实用户的会话标识是否合法、用户是否已经被明确授权执行该操作？,,对于需要授权访问的页面或servlet，都要对请求用户进行合法性判断，只有明确授权的用户才能进行访问。否则拒绝并记录日志,,

                        ,强制,对于受保护资源的访问，是否有检查用户是否拥有访问该资源的权限？,,对于受保护资源的访问，需要检查用户是否被允许访问所请求的资源。如果用户没有被授权则拒绝访问并记录日志,,

                        ,强制,对于采用基于角色的访问控制机制，授权和用户角色数据是否存放在服务器端，鉴权处理是否在服务器端完成？,,不得将授权和角色数据存放在客户端中（比如cookie或隐藏域中），必须存放在服务器端，鉴权处理也必须在服务端完成,,

                        ,强制,一个帐号、组或角色是否只拥有必需的角色和必需的权限？,,帐号、组或角色只拥有必需的角色和必需的权限，做到权限最小化,,

                        ,强制,角色刚创建后是否没有任何权限？,,基于最小权限的原则，角色刚创建时不应该具有任何权限，只有当根据需要、明确为其分配必需的权限后，角色才具有相应的权限,,

                        ,强制,帐号刚创建后是否没有任何角色和权限？,,基于最小权限的原则，帐号刚创建时不应该具有任何角色和权限，只有当根据需要、明确为其分配必需的角色和权限后，帐号才具有相应的角色和权限,,

                        ,强制,对于运行应用程序的操作系统帐号，是否没有使用“root”、“administrator”、“supervisor”等特权帐号或高级别权限帐号？,,应该尽可能地使用低级别权限的操作系统帐号,,

                        ,强制,对于应用程序连接数据库服务器的数据库帐号，在满足业务需求的前提下，是否是使用最低级别权限的数据库帐号？,,根据业务系统要求，创建相应的数据库帐号，并授予必需的数据库权限。不能使用“sa”、“sysman”等管理帐号或高级别权限帐号,,

                        ,强制,对于应用程序连接Web Server或者中间件的帐号，在满足业务需求的前提下，是否有使用最低级别权限的帐号？,,根据业务系统要求，创建相应的Web Server或者中间件的帐号，并授予业务必需的权限。禁止使用“admin”等管理帐号或高级别权限帐号。例如，应用程序通过调用MML命令来完成业务操作，调用MML所使用的帐号应该是根据需要分配必需权限的帐号，而不能是可以调用所有MML命令的超级用户,,

                        ,强制,如果所使用的Web框架，已经有好的授权机制，是否有优先使用？如果Web框架提供的授权机制无法满足需要，需要产品自己开发授权代码，是否完全覆盖受保护的资源和功能、且当授权发生异常时强制用户退出？,,某些Web框架有成熟的授权机制，例如， tomcat提供了管理控制台（console）的授权机制，可以在tomcat-users.xml文件中配置角色和用户信息，由tomcat来完成授权。除非Web框架提供的授权机制无法满足需要（例如，需要通过界面提供灵活的权限分配），如果需要开发定制的授权代码，需要确保覆盖所有受保护的资源和功能，且发生异常时强制用户推出，否则应该优先使用Web框架提供的成熟的授权机制,,

                        ,可选,当授权终止/失效时（例如，角色、雇佣状态或业务流程等发生变化），应用程序是否有支持禁用帐号和终止会话的能力？,,当用户离职应该及时终止其对应的会话，并禁用或删除该用户。当用户角色或业务流程发生变更时，应该能够终止会话，及时应用新角色或新流程,,

                        ,可选,是否有限制单个用户或设备在一个给定的时间内执行的交易数量？,,给定的时间内执行的交易数量可配置，且应高于实际业务需求，但足够低，以阻止自动攻击。例如，系统提供短信随机码，那么应该限制给定时间内，用户可以通过短信获取随机码的次数，以防止攻击者利用该功能对其他用户进行恶意短信骚扰,,

                        ,可选,如果允许长期的已认证的会话，是否有定期重新验证用户的授权、以确保他们的权限没有变更？,,如果由于业务特殊需要，会话超时时间很长（如超过1天），则应定期（如每天）重新验证用户的授权，如果用户的权限有变更，则注销用户，并强制他们重新登录，以确保权限并更能够及时生效,,

                        会话管理,强制,是否有使用会话cookie维持会话？,,使用会话cookie维持会话，当用户成功登录后，将用户名（或用户ID）保存到session对象中。如果条件限制必须通过持久性cookie维持会话，那么cookie信息中的重要数据部分如身份信息、计费信息等都必须进行加密,,

                        ,强制,会话cookie的属性是否有设置为HttpOnly？,,会话cookie的属性要设置为HttpOnly，用以阻止客户端脚本访问Cookie,,

                        ,强制,用户名和口令认证通过后，是否有更换会话标识？,,用户认证通过后须更换会话标识,,

                        ,强制,任何重新认证或二次认证是否有生成新的会话标识？,,重要的交易事务前，需要重新认证或二次认证，并且生成新的会话标识、使原来的会话标识失效,,

                        ,强制,会话过程中不允许修改的信息，是否有作为会话状态的一部分在服务器端存储和维护？,,会话过程中不允许修改的信息，例如，当用户通过认证后，其用户标识在整个会话过程中不能被篡改；又如，用户网上购物时的商品价格也是不允许被篡改。这些信息是禁止通过隐藏域或URL重写等不安全的方式存储和维护。对JSP语言，可以通过session对象进行存储和维护，或者直接查询数据库获取,,

                        ,强制,是否有设置会话超时机制、在超时过后清除会话信息？,,设置会话超时时间，超时后清除会话信息。建议默认会话超时时间为10分钟（备注：对于嵌入式系统中的Web，建议默认超时时间为5分钟，以减少系统资源占用）。如果没有特殊需求，禁止使用自动发起请求的机制来阻止session超时,,

                        ,强制,所有登录后才能访问的页面都是否有明显的“注销（或退出）”的按钮或菜单？如果该按钮或菜单被点击，对应的会话是否立即失效？,,所有登录后才能访问的页面都要有明显的“注销（或退出）”的按钮或菜单，点击该按钮或菜单后，会话应立即失效,,

                        ,强制,是否有在服务器端对业务流程进行必要的流程安全控制、保证流程衔接正确？,,业务流程控制必须在服务器端实现，避免关键鉴别步骤被绕过、重复、乱序,,

                        ,强制,当Web应用跟踪到非法会话，是否有记录日志、清除会话并返回到认证界面？,,非法会话的概念就是通过一系列的服务端合法性检测（包括访问未授权资源，缺少必要参数等情况），最终发现的不是正常请求产生的会话，若检测到非法会话，应立即清除会话并返回到认证界面、并记录日志,,

                        ,强制,如果提供会话锁功能，是否是由服务端进行控制？,,会话锁功能须由服务端进行控制,,

                        ,强制,如果产品（如嵌入式系统）无法使用通用的Web容器，只能自己实现Web服务，则实现的会话管理是否满足会话管理要求？,,"会话管理要求包括：? 
                           采用会话cookie维持会话。
                           ? 生成会话标识（session ID）要保证足够的随机、离散，以便不能被猜测、枚举，不能根据客户端提交的信息来生成会话标识，要求sessionID长度必须至少160bits（例如，同时出现大写字母、小写字母、数字，那么长度至少是26个字符）
                           ? 会话标识应该使用所有可用的字符集，并且大小写敏感。
                           ? 服务端必须对客户端提交的session ID的有效性进行校验。
                           ? 会话标识的属性要设置为HttpOnly。",,

                           ,可选,是否有为包含会话标识的cookie设置适当限制的domain和path属性值？,,Domain（域），指定关联的WEB服务器或域。值是域名，比如huawei.com。如果想让dev.huawei.com 能够访问bbs.huawei.com设置的cookies，可以把domain属性设置成”huawei.com”，并把path属性设置成相应应用的根路径。Path （路径），指定与cookie关联的WEB页。值可以是一个目录，或者是一个路径。如果/service/index.jsp 建立了一个cookie，那么在/service目录里的所有页面，以及该目录下面任何子目录里的页面都可以访问这个cookie。这就是说，在/service/crm/articles 里的任何页面都可以访问/service/index.jsp建立的cookie。但是，如果/manager/ 需要访问/service/index.jsp设置的cookie，要把cookies的path属性设置成相应应用的根路径,,

                           ,可选,当服务端检测到用户的IP、UserAgent等信息发生了变化，是否有强制销毁当前的会话、并要求用户重新登录？,,当服务端检测到用户的IP、UserAgent等信息发生了变化，应该强制注销当前的会话，并要求用户重新登录，以终止当前可能存在的会话劫持攻击,,

                           输入校验,强制,是否有对所有来自不可信数据源的数据进行校验、拒绝任何没有通过校验的数据？,,非系统本身直接可控组件生成的数据是不可信的，需要对所有不可信数据进行校验，拒绝没有通过校验的数据。不可信数据如来自客户端、第三方系统、外部接口的数据。这些数据可能是恶意的，如果不进行校验，可能导致注入、XSS等多种攻击。来自客户端的数据包括text、password、textareas、file表单域、hidden fields、selection boxes、check boxes、radio buttons、cookies、HTTP headers、热点链接包含的URL参数的数据等,,

                           ,强制,是否是通过集中的输入校验程序对输入进行校验？,,使用集中的输入校验程序进行校验，确保同一输入参数的校验规则一致，而且有利于代码维护，如果发现任何错误，可以一次性修复并处处生效,,

                           ,强制,是否没有在同一个数据结构或结构体消息中包含信任和非信任的数据？,,"不能在同一数据结构和消息体中包含有信任和非信任的数据
                           ",,

                           ,强制,是否没有将HTTP标题头中的未加密信息作为安全决策依据？,,HTTP 标题头是在 HTTP 请求和 HTTP 响应的开始阶段发送的。Web 应用程序必须确保不以 HTTP 标题头中的未加密信息作为安全决策依据。例如，标题头中的 referer 字段包含来自请求源端的 Web 页面的 URL。不要根据 referer 字段的值做出任何安全决策（如检查请求是否来源于 Web 应用程序生成的页面），因为该字段是很容易被伪造的,,

                           ,强制,是否没有依赖于客户端校验、而使用服务端代码对输入数据进行最终校验？,,客户端的输入限制或者校验可能会被攻击者绕过。客户端的校验只能作为辅助手段，但最终的数据校验应在服务端进行。,,

                           ,强制,对于在客户端已经做了输入校验，在服务器端再次以相同的规则进行校验时，一旦数据不合法，是否有使会话失效、并记录告警日志？,,对于在客户端已经做了输入校验，若在服务器端再进行校验时发现数据不合法，应立即使会话失效并记录日志,,

                           ,强制,处理Web请求与响应的编码方式是否统一？,,处理Web请求与响应的编码方式应统一。建议统一采用UTF-8字符编码,,

                           ,强制,对于具有相同含义却存在多种描述方式的外部输入数据，是否有先进行标准化再进行输入校验？,,相同含义的数据可能存在多种描述方式。标准化则是选取其中一种表达方式（一般是最简形式）作为标准表达方式，而将其他表达方式转换成此标准表达方式的过程。在校验之前先对输入数据进行标准化，并在校验时使用标准化的形式作为比较标准，以防止恶意输入通过非标准化的输入绕过校验。例如，同一个磁盘文件既可以通过绝对路径也可以通过相对路径来引用，路径中还能包括“.”、“..”、别名、快捷方式等，因此同一个文件可以通过多种形式的路径来描述和引用。在验证路径时需要对路径进行标准化，使得路径表达标准化后进行无歧义的比较。如C:\WINDOWS\system.ini和C:\Program Files\..\windows\system.ini是同一文件的两种表达方式，通常前面一种文件路径表方式被认为是标准的，在做校验之前，需要将后者转换为前面一种标准的形式再做比较,,

                           ,强制,是否有校验输入数据的类型或格式？,,需要校验输入数据的类型或格式，类型包括基本的数据类型（整型、浮点型、字符型等），同时也包括复杂的构造数据类型，例如，email地址、ip地址、日期或者是自定义的数据格式等,,

                           ,强制,是否有校验输入数据的长度？,,必须校验输入数据的长度是否符合要求,,

                           ,强制,是否有校验输入数据的范围？,,如果输入数据是数值，必须校验数值的范围是否正确，如年龄应该为0～150之间的正整数；如果输入数据是在某个特定集合范围内，必须校验实际输入是否在集合内，如性别应该是男、女,,

                           ,强制,是否是尽可能的采取“白名单”的方式进行输入校验（确保输入数据只包含允许的字符集，不包含不合法和危险的字符）？,,"尽可能采用“白名单”方式进行校验，“白名单”的方式只允许输入中包含已知的合法字符。例如对于用户名只允许其中包含字符、数字和下划线，可以采取正则表达对输入做“白名单”校验：^[0-9A-Za-z_]+$。对于个别输入参数（例如：备注信息），确实无法采用白名单校验，就采用黑名单校验，以确保不包含已知危险字符。
                           下面列举了一些常见的有风险的特殊字符：
                           ? 空字节 %00
                           ? 换行符-ANSI chr(10) ""\r"" 
                           ? 回车符-ANSI chr(13) ""\n""
                           ? 回车换行符- ""\n\r""
                           ? 回车符 - EBCDIC 0x0f 
                           ? 引号 "" '
                           ? 逗号、斜杠空格、制表符和其他空白- 用在CSV，制表符分隔的输出，和其他特殊格式
                           ? <> -XML和HTML标签标记，重定向字符
                           ? ; & - Unix 和 NT 文件系统连接符
                           ? @ - 用于邮件地址
                           ? 0xff",,

                           ,强制,是否不存在采用未经校验的输入参数直接串联来构造可执行 SQL语句？,,不得采用未经校验的输入参数直接串联来构造可执行SQL语句。对于java/JSP语言，使用预编译语句PreparedStatement代替直接的语句执行Statement,,

                           ,强制,是否不存在采用未经校验的输入参数来动态构建XPath语句？,,不得采用未经校验的输入参数来动态构建XPath语句,,

                           ,强制,如果服务端代码执行操作系统命令，是否有对客户端输入的用于构造命令的参数进行严格的输入校验？,,如果服务端代码中使用Runtime.getRuntime().exec(cmd)或ProcessBuilder等执行操作系统命令，那么禁止从客户端获取命令；而且最好不要从客户端获取命令的参数，如果必须从客户获取命令的参数，那么必须采用正则表达式对命令参数进行严格的校验,,

                           ,强制,是否有对客户端提交的表单请求进行合法性校验？,,服务器端需要对客户端提交的表单请求进行必要的合法性校验,,

                           ,强制,对于产品自身开发实现Web容器的情况下，是否不存在由于编码不当引入缓冲区溢出漏洞？,,对于嵌入式系统（如ADSL Modem、硬件防火墙）中的Web应用，产品自己开发相应的Web容器。在开发过程中要避免由于内存管理不当带来的缓冲区溢出问题,,

                           输出编码,强制,若输出到客户端或者解释器的数据来自不可信的数据源，是否有对该数据进行相应的编码或转义？,,对于来自不可信数据源的数据要输出到客户端或者解释器前，需要进行编码和转义。Web应用中编码方式有HTML编码、URL编码、JavaScript编码、CSS编码、以及对SQL、XML、LDAP的编码或转义等。实际应用中需根据不可信数据的使用方式采用不同的编码方式，如用作为HTML标签内容时需要进行HTML编码、用作页面中超链接的URL值时需要进行URL编码、用作SQL的条件参数时需要进行SQL转义等,,

                           文件管理,强制,是否有在服务器端采用白名单方式对上传的文件类型进行严格的限制？,,针对上传文件类型的检查，不能仅仅只通过文件的扩展名进行判断，而是需要通过检查文件的文件头来判断。限制Web 容器可以解析执行的文件类型（如：JSP、ASP、ASPX、PHP等）的上传,,

                           ,强制,是否不存在以客户端提交的数据作为读/写/上传/下载文件的路径或文件名？,,建议对写/上传文件的路径或文件名采用随机方式生成，或将写/上传文件放置在有适当访问许可的专门目录。对读/下载文件采用映射表（例如，用户提交的读文件参数为1，则读取file1，参数为2，则读取file2）。不存在以客户端提交的数据作为读/写/上传/下载文件的路径或文件名,,

                           ,强制,文件存放是否满足要求？,,不存在将不属于Web目录的文件放置在Web目录下，不存在将敏感的静态资源文件存放在Web内容目录下，对于临时文件，要及时删除,,

                           ,强制,是否不存在将文件绝对路径发送到客户端？,,在正常访问或出现异常时，不得将文件绝对路径发送到客户端,,

                           ,可选,对于安全性要求较高的产品，是否有在服务器上部署防病毒软件？,,在服务器上部署防病毒软件，上传文件时，调用防病毒软件API来对上传文件即时进行病毒和恶意软件扫描。若发现文件含有病毒或恶意软件，则应立即删除上传文件并记录日志,,

                           敏感数据保护,强制,代码中是否没有存储敏感数据？,,代码中没有存储如数据库连接字符串、口令和密钥之类的敏感数据,,

                           ,强制,密钥或帐号的口令是否没有以明文形式存储在数据库或者文件中？,,密钥或帐号的口令必须经过加密存储。例外情况，如果Web容器的配置文件中只能以明文方式配置连接数据库的用户名和口令，那么就不用强制遵循该规则，将该配置文件的属性改为只有属主可读写,,

                           ,强制,cookie中是否没有以明文形式存储敏感数据？,,不要在cookie中存储敏感数据；如果条件限制必须使用cookie存储敏感信息时，必须先对敏感信息加密再存储到cookie,,

                           ,强制,在隐藏域中是否没有存放明文形式的敏感数据？,,检查所有页面的隐藏域，确认所有隐藏域都没有包含明文形式的敏感数据,,

                           ,强制,在日志中是否没有记录明文的敏感数据？,,日志中没有记录明文的敏感数据（如口令、会话标识等）,,

                           ,强制,是否不存在带有敏感数据的Web页面缓存？,,带有敏感数据的Web页面都应该禁止缓存,,

                           ,强制,存储在服务器端的敏感数据的缓存或临时拷贝是否不存在未授权访问？,,需要将含有敏感数据的缓存或临时文件放置于无法通用Web直接访问的目录，并确保文件权限只有属主可读写，使用后立即删除,,

                           ,强制,对存储在服务器上的敏感数据是否有实施访问权限控制？,,基于操作系统和数据库的访问控制机制，对服务器上存储的敏感数据实施严格的访问权限保护，即对于敏感数据文件只有属主才能够访问，对于存储在数据库中的数据，只有已授权的用户可以访问,,

                           ,强制,敏感数据表单是否不存在自动填充功能？,,如信用卡号、验证码、一次密钥等表单不存在自动填充功能,,

                           ,强制,带有敏感数据的表单是否有使用HTTP-POST方法提交？,,使用HTTP-POST方法提交带有敏感数据的表单（form），不得使用HTTP-GET方法。如果是使用servlet处理提交的表单数据，那么不在doGet方法中处理，只在doPost方法处理,,

                           ,强制,在客户端和服务器间传递敏感数据时，是否有保证数据的机密性？,,在客户端和服务器间传递如帐号、口令等敏感数据，必须保证数据的机密性，推荐使用带服务器端证书的SSL,,

                           ,强制,在URL中是否不会携带会话标识？,,不得在URL中携带会话标识,,

                           ,强制,将对用户保密的信息是否不会传送到客户端？,,不得将对用户保密的信息如口令、密钥等传送到客户端,,

                           加密,强制,是否使用没有专利的安全标准加密算法？,,"仅使用安全的标准的加密算法，建议使用的加密算法包括：
                           ? 对称加密算法建议使用：AES 192；
                           ? 密钥交换算法建议使用：DH 2048；
                           ? 数字签名算法建议使用：DSA 2048、ECDSA 224；
                           ? 非对称算法建议使用：ECC 224、RSA 2048；
                           ? HASH（哈希）算法建议使用：SHA 256；
                           ? HMAC（基于哈希的消息验证码）算法建议使用：HMAC-SHA256；",,

                           ,强制,是否有使用安全的随机数生成方式？,,安全用途的随机数需要采用密码安全随机数生成器来产生。C语言中，Windows 环境下使用 CryptGenRandom 来生成随机数，Unix、Linux 环境下从名为 /dev/urandom 或者 /dev/random 的设备中读取从而得到随机数，也可采用Openssl开源组件来获取随机数。Java 中使用类 java.security.SecureRandom 来生成随机数,,

                           ,强制,密钥存储时是否有进行加密保护？,,用于数据加密的工作密钥需要进行加密保护,,

                           ,强制,密钥文件是否有进行严格的访问权限控制？,,通过操作系统的文件访问权限控制机制，设置密钥文件属性为只有属主可读,,

                           ,强制,Web应用是否有对密钥的更换记录日志？,,对密钥的更换记录日志,,

                           ,强制,密钥传输时是否有进行加密保护？,,在非信任网络传输密钥时建议采用HTTPS,,

                           异常处理,强制,向客户端返回的异常消息中是否没有暴露不必要的信息、只能返回一般性的错误提示消息？,,出现异常时，禁止将数据库版本、数据库结构、操作系统版本、堆栈跟踪、文件名和路径信息、SQL 查询字符串等对攻击者有用的信息返回给客户端。建议重定向到一个统一、默认的错误提示页面，进行信息过滤,,

                           ,强制,应用程序捕获异常，是否有在日志中记录详细的错误信息？,,捕获异常时需记录详细的错误消息,,

                           ,强制,发生异常时是否有释放已申请的文件句柄、数据库连接、内存等资源？,,发生异常时需释放已申请的文件句柄、数据库连接、内存等资源,,

                           日志,强制,应用服务器是否有对安全事件及操作事件进行日志记录？,,安全事件包括登录、注销、添加、删除、修改用户、授权、取消权限、鉴权、修改用户口令等；操作事件包括对业务系统配置参数的修改，对重要业务数据的创建、删除、修改、查询等；对于上述事件的结果，不管是成功还是失败，都需要记录日志,,

                           ,强制,日志信息是否记录完整？,,日志信息包括但不限于如下内容：事件发生的时间、事件类型、客户端IP、客户端机器名、当前用户的标识、受影响的个体（数据、资源）、成功或失败标识、启动该事件的进程标识以及对该事件的详细描述,,

                           ,强制,是否有严格限制对日志的访问？,,只有Web应用程序的管理员才能查询数据库表形式或文件形式的日志；除数据库超级管理员外，只有应用程序连接数据库的帐号可以查询（select）及插入（insert）日志表；除操作系统超级管理员外，只有应用程序的运行帐号才能读、写文件形式的日志（但不允许删除）。,,

                           ,强制,对日志模块占用资源是否有相应的限制机制？,,限制日志模块占用的资源，比如限制日志记录占用的磁盘空间,,

                           ,强制,日志文件和操作系统是否不是存储在同一个分区中？,,日志文件和操作系统应存储在不同的分区中,,

                           ,强制,发布的产品代码是否只有在调试模式下才能输出调试日志？调试模式是否只能通过登录服务器手动开启？,,禁止通过远程接口或界面来开启调试模式。只有在进行问题定位时，通过登录服务器手动开启调试模式。发布的产品代码也只有在调试模式下才能输出调试日志,,

                           ,可选,日志是否有备份及清理机制？,,备份及清理机制包括定期备份及清理日志和监控用于存放日志的磁盘空间的使用情况。可以配置定期备份及清理的时间，可以配置以用于存放日志的磁盘空间使用率达到多少时进行备份及清理,,

                           ,可选,是否有通过集中日志服务器来保存日志？,,将日志保存到集中的日志服务器中减少篡改、删除和非法访问的风险,,

                           Web Service,强制,是否有使用SSL服务器端证书对Web Service提供方进行身份验证？,,使用SSL服务器端证书，对Web Service提供方进行身份验证。Web Service调用方应验证颁发的服务器证书是一个值得信赖的供应商，且证书未过期、没有被撤销、和域名匹配，并且服务端已经证明它拥有和公钥证书相关的私钥（通过签名或对使用公钥加密的数据进行正确解密）,,

                           ,强制,是否有使用SSL客户端证书对Web Service调用方进行认证？,,使用SSL客户端证书，对Web Service调用方进行认证,,

                           ,强制,如果调用者的权限各不相同，是否有对Web Service接口的调用进行鉴权？,,鉴权就是判断调用者是否有权限调用该Web Service接口，只有授权用户可以调用已经被授权的Web Service接口,,

                           ,强制,是否有保障Web Service接口传递SOAP消息的机密性和完整性？,,如采用HTTPS安全协议，如果使用Axis2（实现Web Service的一种技术框架），可以采用Apache Rampart，快速实现SOAP消息的签名和加解密,,

                           ,强制,如果Web Service只对特定的IP开放，是否有对调用Web Service接口的客户端IP进行鉴权？,,只有在IP地址白名单中的客户端才允许调用，IP地址白名单可配置,,

                           ,强制,在Web Service的客户端和服务器之间是否是使用相同的编码？,,Web Service客户端和服务器间使用相同的编码方式。建议统一采用UTF-8字符编码,,

                           ,强制,Web Service是否有根据XML schema定义（XSD）来验证SOAP消息？,,Web Service必须根据XML schema定义（XSD）来验证SOAP消息，XSD至少必须为允许流入和流出Web Service的每一个参数定义最大长度和字符集；对于所有具有固定格式的参数（如：邮政编码，电话号码，列表值等），要定义强的校验模式，最理想的方式就是白名单校验模式,,

                           ,强制,对Web Service提交的参数是否有进行输入校验？,,使用Web Service提交的参数前，必须先进行输入校验,,

                           ,强制,对Web Service接口调用是否有进行日志记录？,,对Web Service接口调用需进行日志记录，日志内容包括但不限于如下内容：调用时间、操作类型、调用接口名称、详细的接口参数、客户端IP、客户端机器名、调用者的用户标识、受影响的个体（数据、资源）、成功或失败标识,,

                           ,强制,是否有根据实际业务需要限制SOAP消息的大小为适当的值？,,根据实际业务情况，合适的限制SOAP消息的大小,,

                           ,可选,Web Service接口是否有防御重放攻击？,,如通过时间戳或流水号的机制防止对Web Service接口的重放攻击。采用时间戳机制时，必须同时确保客户端和服务器间的时间同步,,

                           DWR,强制,是否有关闭DWR 调试功能？,,版本发布时，一定要关闭DWR调试功能,,

                           ,强制,是否有对DWR方法的调用进行认证？,,对DWR方法的调用进行认证，确保调用者身份的合法性,,

                           ,强制,是否有对DWR方法的调用进行鉴权？,,对DWR方法的调用进行鉴权，确保调用者有权限调用该DWR方法,,

                           ,强制,是否有对DWR提交的参数进行输入校验？,,使用DWR提交的参数前，必须先进行输入校验,,

                           防范DoS,强制,是否有避免过多的CPU、内存、磁盘I/O和网络I/O的消耗？,,报告生成、静态分析等业务功能常常会占用大量的CPU资源。数据库查询、大图片处理等业务功能会导致磁盘I/O消耗过高。如果一个页面存在20倍的输出输入比（比如请求大小为1kb，而服务器返回20kb的页面或者图片），则可能网络I/O的大量消耗。因此，需要识别Web应用中哪些业务功能可能会造成这些资源的大量消耗，应只允许通过身份验证和授权的特定用户才能提交对资源有大量消耗的请求,,

                           ,强制,是否有避免用户帐号锁定机制的滥用？,,Web应用通常会有用户锁定机制，需要记录用户锁定请求，如果在短时间内（例如30秒）来自同一IP地址的请求造成多个用户帐号被锁定，则锁定该IP地址。帐号锁定机制要保证一定时间（可配置，建议15分钟）后自动解锁帐号,,

                           防范钓鱼攻击,强制,对于重定向目标URL的输入参数，是否有严格限定其所能重定向的目标URL、并确保其不包含回车和换行字符？,,必须严格限定其所能重定向的目标URL参数，如果重定向的目标是本域，则使用正则表达式校验该参数值是否是本域，如果允许其重定向的目标URL在开发阶段无法确定，则需要提供重定向目标URL的配置，以便程序能够根据现网的配置进行校验。通过白名单的正则表达式进行校验，可以同时确保其不包含回车和换行字符,,

                           ,强制,是否是保持地址栏、URL信息对用户可见？,,保持地址栏、URL信息对用户可见（默认地址栏、URL为可见）,,

                           ,强制,对于面向互联网的Web应用，是否有使用权威证书颁发机构颁发的SSL证书？,,浏览器能够验证证书的合法性，因此使用权威证书颁发机构颁发的SSL服务器端证书，且证书未过期、没有被撤销、和域名匹配，能够帮助用户确认当前所访问的网站是否合法。备注：由于开发阶段往往无法确认部署时的域名和有效期，所以只能使用开发人员临时生成SSL证书，需要在用户资料中要求客户从权威证书颁发机构购买正式的SSL证书，替换临时SSL证书，并提供相应的实施指导,,

                           ,可选,是否有提供用户自定义欢迎词功能？,,用户可以自定义欢迎词，用户成功登录后，系统给用户显示其设置的欢迎词,,

                           ,可选,是否有监控异常的帐号活动？,,结合业务特点对帐号的异常活动进行监控。例如，针对在线购物Web应用，可以根据一定规则来检查用户的活动是否为异常活动，比如多个帐号订购了被送到相同送货地址的商品，或从同一个IP地址发起了大量相同的订单,,

                           ,可选,是否没有使用弹出窗口（pop-ups）的方式？,,不使用并告知用户该Web应用不会使用弹出窗口的方式（例如当用户注册时进行提示，或者在用户资料中进行说明），让用户谨慎访问弹出窗口,,

                           ,可选,是否有避免网页被框架？,,避免网页被框架,,

                           代码注释,强制,在注释信息中是否没有包含物理路径、数据库连接、SQL语句信息？,,检查所有页面的原文件，确认注释信息中不包含物理路径、数据库连接、SQL语句信息,,

                           ,强制,对于静态页面，在注释信息中是否没有包含源代码信息？,,检查所有静态页面，确认注释信息中是否没有包含源代码信息,,

                           ,强制,对于动态页面是否没有使用普通注释、只使用隐藏注释？,,动态页面包括ASP、PHP、JSP、CGI等由动态语言生成的页面。动态页面只使用隐藏注释,,

                           归档要求,强制,版本归档时，是否有删除开发过程（包括现场定制）中的临时文件、备份文件、无用目录等？,,版本归档时，应删除开发过程（包括现场定制）中的临时文件、备份文件、无用目录等,,

                           ,强制,归档的页面程序文件的扩展名是否是使用小写字母？,,归档的页面程序文件的扩展名必须使用小写字母，如jsp、html、htm、asp等页面程序文件的扩展名分别为jsp、html、htm、asp,,

                           ,强制,归档的程序文件中是否没有保留调试用的代码？,,这里的“调试用的代码”是指开发过程中进行临时调试所用的、在Web应用运行过程中不需要使用到的Web页面代码或servlet代码。归档时，不得保留调试用的代码,,

                           部署与配置管理,强制,若Web应用对Internet 开放，Web服务器是否是置于DMZ区？,,在Web服务器与Internet之间、Web服务器与内网之间应当有防火墙隔离，并设置合理的策略,,

                           ,强制,若Web应用对 Internet 开放，Web服务器是否有部署在其专用的服务器上？,,Web服务器和数据库或核心应用服务器分开部署在不同服务器上，增强安全性,,

                           ,强制,Web站点的根目录是否是安装在非系统卷中？,,Web站点根目录安装在非系统卷，如单独创建一个目录/home/Web作为Web站点根目录,,

                           ,强制,Web容器及应用的文件和目录权限是否是最小化设置？,,Web容器及应用的文件和目录权限最小化（目录权限设置为仅允许属主读、写、执行，bin目录下的可执行文件权限设置为仅允许属主读、执行，其他文件权限设置为仅允许属主读）,,

                           ,强制,对于所使用的Web容器，是否有进行安全配置？,,Web容器的默认配置主要是基于通用性、易用性考虑，默认启用了一些在生产环境中不必要的功能、端口，未开启相应的安全防护，在使用Web容器时，必须对Web容器进行安全配置，使其达到最佳安全状态,,

                           ,强制,最终用户Portal和管理Portal是否有分离？,,最终用户（End-user）Portal和管理Portal分离，防止相互影响，防止来自用户面的攻击影响管理面。,,

                           ,强制,对于面向互联网开放的Web站点，是否有避免robots.txt对外暴露不想公开的目录结构？,,对于面向互联网开发的web站点，禁止将不适合公众索引或者不是所有用户可见的目录或文件，列在robots.txt文件中,,

                           ,可选,是否通过不同的Web服务器来处理来自不同访问等级（如个人帐号使用、客户服务、管理）的请求？,,如果Web应用系统存在不同的访问等级（如个人帐号使用、客户服务、管理），那么应该通过不同的Web服务器来处理来自不同访问等级的请求，而且Web应用应该鉴别请求是否来自正确的Web服务器。说明：这样便于通过防火墙的访问控制策略和Web应用来控制不同访问等级的访问，比如通过防火墙策略控制，只允许内网访问管理Portal。,,

                           ,可选,对于安全性较高的Web应用，是否是全程采用HTTPS方式？,,对于安全性较高的Web应用需要加强安全防护机制，全程采用HTTPS以保证会话的机密性和完整性,,

                           ,可选,对于 “管理”类的访问，除进行常规的用户名和口令认证外，是否有增加额外的访问限制？,,额外的访问限制，可以限制请求来自企业内网，或采用IP地址白名单的方式对客户端的IP地址进行过滤判,,

                           ,可选,是否有部署Web应用防火墙来保护Web应用？,,检查在Web服务器与浏览器之间，确认有部署Web应用防火墙，增强Web应用系统安全防护,,

                           ,,,,,,


